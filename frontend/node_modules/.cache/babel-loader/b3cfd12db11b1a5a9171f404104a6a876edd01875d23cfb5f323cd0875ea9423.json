{"ast":null,"code":"var _jsxFileName = \"/Users/macbookprom1/Desktop/SeniorGPT/frontend/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { XMarkIcon, PaperAirplaneIcon } from '@heroicons/react/24/outline';\nimport { useSelector, useReduxContext } from 'react-redux'; // Ajoute useReduxContext pour débogage\nimport { Navigate } from 'react-router-dom';\nimport '../styles/chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const reduxContext = useReduxContext(); // Vérifie si Redux est disponible\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [error, setError] = useState('');\n  const username = useSelector(state => {\n    var _state$auth, _state$auth$user;\n    return (_state$auth = state.auth) === null || _state$auth === void 0 ? void 0 : (_state$auth$user = _state$auth.user) === null || _state$auth$user === void 0 ? void 0 : _state$auth$user.username;\n  }) || 'bintein_nicolas'; // Sûr même si undefined\n  const role = useSelector(state => {\n    var _state$auth2, _state$auth2$user;\n    return (_state$auth2 = state.auth) === null || _state$auth2 === void 0 ? void 0 : (_state$auth2$user = _state$auth2.user) === null || _state$auth2$user === void 0 ? void 0 : _state$auth2$user.role;\n  }); // Sûr même si undefined\n\n  useEffect(() => {\n    if (role && reduxContext) {\n      setMessages([{\n        text: `Bonjour ${username}, Comment puis-je t'aider?`,\n        sent: false\n      }]);\n    }\n  }, [role, username, reduxContext]);\n  const sendMessageToChatGPT = async message => {\n    try {\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer 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'\n        },\n        body: JSON.stringify({\n          model: 'gpt-3.5-turbo',\n          messages: [{\n            role: 'user',\n            content: message\n          }],\n          temperature: 0.7\n        })\n      });\n      if (!response.ok) throw new Error(`Erreur HTTP ${response.status}: ${await response.text()}`);\n      const data = await response.json();\n      return data.choices[0].message.content;\n    } catch (err) {\n      setError(`Erreur : ${err.message}`);\n      return 'Désolé, je ne peux pas répondre pour le moment.';\n    }\n  };\n  const handleSendMessage = async () => {\n    if (inputMessage.trim() && role && reduxContext) {\n      setMessages(prev => [...prev, {\n        text: inputMessage,\n        sent: true\n      }]);\n      const reply = await sendMessageToChatGPT(inputMessage);\n      setMessages(prev => [...prev, {\n        text: reply,\n        sent: false\n      }]);\n      setInputMessage('');\n    }\n  };\n  if (!role || !reduxContext) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 38\n  }, this); // Redirige si Redux ou role manquent\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"chat-title\",\n        children: \"SD1 Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: msg.sent ? 'sent' : 'received',\n          children: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value),\n          placeholder: \"Posez une question...\",\n          onKeyPress: e => e.key === 'Enter' && handleSendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          className: \"send-button\",\n          children: /*#__PURE__*/_jsxDEV(PaperAirplaneIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"h3z6Z4nGi2ZC5eFmoqmPsyiVH0M=\", false, function () {\n  return [useReduxContext, useSelector, useSelector];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","XMarkIcon","PaperAirplaneIcon","useSelector","useReduxContext","Navigate","jsxDEV","_jsxDEV","Chat","_s","reduxContext","messages","setMessages","inputMessage","setInputMessage","error","setError","username","state","_state$auth","_state$auth$user","auth","user","role","_state$auth2","_state$auth2$user","text","sent","sendMessageToChatGPT","message","response","fetch","method","headers","body","JSON","stringify","model","content","temperature","ok","Error","status","data","json","choices","err","handleSendMessage","trim","prev","reply","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","className","children","map","msg","index","type","value","onChange","e","target","placeholder","onKeyPress","key","onClick","_c","$RefreshReg$"],"sources":["/Users/macbookprom1/Desktop/SeniorGPT/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { XMarkIcon, PaperAirplaneIcon } from '@heroicons/react/24/outline';\nimport { useSelector, useReduxContext } from 'react-redux'; // Ajoute useReduxContext pour débogage\nimport { Navigate } from 'react-router-dom';\nimport '../styles/chat.css';\n\nfunction Chat() {\n  const reduxContext = useReduxContext(); // Vérifie si Redux est disponible\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [error, setError] = useState('');\n  const username = useSelector((state) => state.auth?.user?.username) || 'bintein_nicolas'; // Sûr même si undefined\n  const role = useSelector((state) => state.auth?.user?.role); // Sûr même si undefined\n\n  useEffect(() => {\n    if (role && reduxContext) {\n      setMessages([{ text: `Bonjour ${username}, Comment puis-je t'aider?`, sent: false }]);\n    }\n  }, [role, username, reduxContext]);\n\n  const sendMessageToChatGPT = async (message) => {\n    try {\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer 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'\n        },\n        body: JSON.stringify({\n          model: 'gpt-3.5-turbo',\n          messages: [{ role: 'user', content: message }],\n          temperature: 0.7\n        })\n      });\n      if (!response.ok) throw new Error(`Erreur HTTP ${response.status}: ${await response.text()}`);\n      const data = await response.json();\n      return data.choices[0].message.content;\n    } catch (err) {\n      setError(`Erreur : ${err.message}`);\n      return 'Désolé, je ne peux pas répondre pour le moment.';\n    }\n  };\n\n  const handleSendMessage = async () => {\n    if (inputMessage.trim() && role && reduxContext) {\n      setMessages((prev) => [...prev, { text: inputMessage, sent: true }]);\n      const reply = await sendMessageToChatGPT(inputMessage);\n      setMessages((prev) => [...prev, { text: reply, sent: false }]);\n      setInputMessage('');\n    }\n  };\n\n  if (!role || !reduxContext) return <Navigate to=\"/login\" replace />; // Redirige si Redux ou role manquent\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-content\">\n        <h2 className=\"chat-title\">SD1 Chat</h2>\n        <div className=\"messages\">\n          {messages.map((msg, index) => (\n            <div key={index} className={msg.sent ? 'sent' : 'received'}>\n              {msg.text}\n            </div>\n          ))}\n        </div>\n        <div className=\"message-input\">\n          <input\n            type=\"text\"\n            value={inputMessage}\n            onChange={(e) => setInputMessage(e.target.value)}\n            placeholder=\"Posez une question...\"\n            onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n          />\n          <button onClick={handleSendMessage} className=\"send-button\">\n            <PaperAirplaneIcon className=\"h-5 w-5\" />\n          </button>\n        </div>\n        {error && <div className=\"alert error\">{error}</div>}\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}