{"ast":null,"code":"var _jsxFileName = \"/Users/macbookprom1/Desktop/SeniorGPT/frontend/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { XMarkIcon, PaperAirplaneIcon } from '@heroicons/react/24/outline';\nimport '../styles/chat.css'; // Changement d'importation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [error, setError] = useState('');\n  const sendMessageToChatGPT = async message => {\n    try {\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer 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' // Clé fournie\n        },\n        body: JSON.stringify({\n          model: 'gpt-3.5-turbo',\n          messages: [{\n            role: 'user',\n            content: message\n          }],\n          temperature: 0.7\n        })\n      });\n      if (!response.ok) throw new Error('Erreur avec l\\'API ChatGPT');\n      const data = await response.json();\n      return data.choices[0].message.content;\n    } catch (err) {\n      setError('Erreur : ' + err.message);\n      return 'Désolé, je ne peux pas répondre pour le moment.';\n    }\n  };\n  const handleSendMessage = async () => {\n    if (inputMessage.trim()) {\n      setMessages(prev => [...prev, {\n        text: inputMessage,\n        sent: true\n      }]);\n      const reply = await sendMessageToChatGPT(inputMessage);\n      setMessages(prev => [...prev, {\n        text: reply,\n        sent: false\n      }]);\n      setInputMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat-container ${isChatOpen ? 'open' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsChatOpen(!isChatOpen),\n      className: \"chat-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Chat IA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XMarkIcon, {\n        className: \"h-5 w-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), isChatOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: msg.sent ? 'sent' : 'received',\n          children: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value),\n          placeholder: \"Posez une question \\xE0 l'IA...\",\n          onKeyPress: e => e.key === 'Enter' && handleSendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          className: \"send-button\",\n          children: /*#__PURE__*/_jsxDEV(PaperAirplaneIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"1HE152RTm0JVZF9zkY09elR48Ro=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","XMarkIcon","PaperAirplaneIcon","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","inputMessage","setInputMessage","isChatOpen","setIsChatOpen","error","setError","sendMessageToChatGPT","message","response","fetch","method","headers","body","JSON","stringify","model","role","content","temperature","ok","Error","data","json","choices","err","handleSendMessage","trim","prev","text","sent","reply","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","e","target","placeholder","onKeyPress","key","_c","$RefreshReg$"],"sources":["/Users/macbookprom1/Desktop/SeniorGPT/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { XMarkIcon, PaperAirplaneIcon } from '@heroicons/react/24/outline';\nimport '../styles/chat.css';  // Changement d'importation\n\nfunction Chat() {\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [error, setError] = useState('');\n\n  const sendMessageToChatGPT = async (message) => {\n    try {\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer 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' // Clé fournie\n        },\n        body: JSON.stringify({\n          model: 'gpt-3.5-turbo',\n          messages: [{ role: 'user', content: message }],\n          temperature: 0.7\n        })\n      });\n      if (!response.ok) throw new Error('Erreur avec l\\'API ChatGPT');\n      const data = await response.json();\n      return data.choices[0].message.content;\n    } catch (err) {\n      setError('Erreur : ' + err.message);\n      return 'Désolé, je ne peux pas répondre pour le moment.';\n    }\n  };\n\n  const handleSendMessage = async () => {\n    if (inputMessage.trim()) {\n      setMessages((prev) => [...prev, { text: inputMessage, sent: true }]);\n      const reply = await sendMessageToChatGPT(inputMessage);\n      setMessages((prev) => [...prev, { text: reply, sent: false }]);\n      setInputMessage('');\n    }\n  };\n\n  return (\n    <div className={`chat-container ${isChatOpen ? 'open' : ''}`}>\n      <button onClick={() => setIsChatOpen(!isChatOpen)} className=\"chat-toggle\">\n        <span>Chat IA</span>\n        <XMarkIcon className=\"h-5 w-5\" />\n      </button>\n      {isChatOpen && (\n        <div className=\"chat-box\">\n          <div className=\"messages\">\n            {messages.map((msg, index) => (\n              <div key={index} className={msg.sent ? 'sent' : 'received'}>\n                {msg.text}\n              </div>\n            ))}\n          </div>\n          <div className=\"message-input\">\n            <input\n              type=\"text\"\n              value={inputMessage}\n              onChange={(e) => setInputMessage(e.target.value)}\n              placeholder=\"Posez une question à l'IA...\"\n              onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n            />\n            <button onClick={handleSendMessage} className=\"send-button\">\n              <PaperAirplaneIcon className=\"h-5 w-5\" />\n            </button>\n          </div>\n          {error && <div className=\"alert error\">{error}</div>}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}